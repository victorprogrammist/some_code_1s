
Функция   Сформировать()
	
	тхт = "
	
	//***********************************************************************
	|выбрать
	|	Неопределено КАК Документ,
	|	Неопределено как Дата,
	|	Неопределено как Номер,
	|	тт.Номенклатура,
	|	тт.ВНаличииОстаток КАК Нач,
	|	0 КАК Прих,
	|	0 КАК Расх,
	|	0 КАК Кон
	|поместить
	|	ВТ_ДАННЫЕ_РАЗВЕРНУТО
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|		&ДатаНачала, Склад = &Склад) КАК тт
	
	//*********************
	|объединить все выбрать
	|	Неопределено,
	|	Неопределено,
	|	Неопределено,
	|	тт.Номенклатура,
	|	0 КАК Нач,
	|	0 КАК Прих,
	|	0 КАК Расх,
	|	тт.ВНаличииОстаток КАК Кон
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|		&ДатаОкончания, Склад = &Склад) КАК тт
	
	//*********************
	|объединить все выбрать
	|	тт.Регистратор,
	|	тт.Период,
	|	тт.Регистратор.Номер,
	|	тт.Номенклатура,
	|	0 КАК Нач,
	|	выбор когда тт.ВидДвижения = значение(ВидДвиженияНакопления.Приход) Тогда
	|		тт.ВНаличии иначе 0 конец КАК Прих,
	|	выбор когда тт.ВидДвижения = значение(ВидДвиженияНакопления.Расход) Тогда
	|		тт.ВНаличии иначе 0 конец КАК Расх,
	|	0 КАК Кон
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах как тт
	|где
	|	тт.Склад = &Склад
	|	и тт.Активность
	|	и тт.Период >= &ДатаНачала
	|	и тт.Период < &ДатаОкончания;
	
	//***********************************************************************
	|выбрать
	|	Номенклатура,
	|	Документ,
	|	Дата,
	|	Номер,
	|	сумма(Нач),
	|	сумма(Прих),
	|	сумма(Расх),
	|	сумма(Кон)
	|поместить
	|	ВТ_ДАННЫЕ_КОЛИЧЕСТВО
	|из
	|	ВТ_ДАННЫЕ_РАЗВЕРНУТО
	|где
	|	&ЛБ_ВидТовара = Неопределено
	|	или Номенклатура.ЛБ_ВидТовара = &ЛБ_ВидТовара
	|сгруппировать по
	|	Номенклатура,Документ,Дата,Номер;
	
	//***********************************************************************
	|выбрать
	|	тт.Номенклатура,
	|	сумма(тт.Стоимость) / сумма(тт.Количество) как ЦенаЗакупки
	|поместить
	|	ВТ_ЦЕНЫ_ЗАКУПКИ
	|из (
		|выбрать
		|	АналитикаУчетаНоменклатуры.Номенклатура как Номенклатура,
		|	Стоимость,
		|	Количество
		|из
		|	РегистрНакопления.СебестоимостьТоваров
		|где
		|	АналитикаУчетаНоменклатуры.Номенклатура в
			|	(выбрать различные Номенклатура из ВТ_ДАННЫЕ_КОЛИЧЕСТВО)
		|	и Количество > 0
		|	и (Регистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг
		|		или Регистратор ССЫЛКА Документ.ВводОстатков)
	|	) как тт
	|сгруппировать по
	|	тт.Номенклатура;
	
	//***********************************************************************
	
	|выбрать
	|	тт.Ссылка как Документ,
	|	тт.Номенклатура,
	|	Сумма(тт.Сумма)
	|поместить
	|	ВТ_СТОИМОСТЬ_ПРОДАЖИ
	|из
	|	Документ.РеализацияТоваровУслуг.Товары как тт
	|где
	|	тт.Ссылка.Проведен
	|	и тт.Ссылка.Склад = &Склад
	|	и тт.Ссылка.Дата >= &ДатаНачала
	|	и тт.Ссылка.Дата < &ДатаОкончания
	|сгруппировать по
	|	тт.Ссылка, тт.Номенклатура;
	
	//***********************************************************************
	|выбрать
	|	тт.Номенклатура,
	|	тт.Номенклатура.Наименование как Название,
	|	тт.Документ,
	|	тт.Дата,
	|	тт.Номер,
	|	тт.Нач * IsNull(тЦ.ЦенаЗакупки,0) как НачСтоимость,
	|	тт.Прих * IsNull(тЦ.ЦенаЗакупки,0) как ПриходСтоимость,
	|	тт.Расх * IsNull(тЦ.ЦенаЗакупки,0) как РасходСтоимость,
	|	тт.Кон * IsNull(тЦ.ЦенаЗакупки,0) как КонСтоимость,
	|	IsNull(тПрод.Сумма,0) как СтоимостьПродажи
	|из
	|	ВТ_ДАННЫЕ_КОЛИЧЕСТВО как тт
	|	левое соединение
	|	ВТ_ЦЕНЫ_ЗАКУПКИ как тЦ
	|	по тт.Номенклатура = тЦ.Номенклатура
	|	левое соединение
	|	ВТ_СТОИМОСТЬ_ПРОДАЖИ как тПрод
	|	по тт.Номенклатура = тПрод.Номенклатура
	|	и тт.Документ = тПрод.Документ
	|упорядочить по
	|	тт.Дата, тт.Номер
	|	";
	
	з = новый Запрос(тхт);
	з.УстановитьПараметр("ДатаНачала", ДатаНачала);
	з.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания)+1);
	з.УстановитьПараметр("Склад", Склад);
	з.УстановитьПараметр("ЛБ_ВидТовара", НеПуст(ЛБ_ВидТовара,Неопределено));
	тДан = з.Выполнить().Выгрузить();
	
	//*********************************************************
	НачСтоимость = тДан.Итог("НачСтоимость");
	ПриходСтоимость = тДан.Итог("ПриходСтоимость");
	РасходСтоимость = тДан.Итог("РасходСтоимость");
	КонСтоимость = тДан.Итог("КонСтоимость");
	
	Объект = РеквизитФормыВЗначение("Отчет");
	Макет = Объект.ПолучитьМакет("Макет");
	тд = новый ТабличныйДокумент;
	
	Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, ДатаОкончания);
	
	о = Макет.ПолучитьОбласть("Заголовок");
	о.Параметры.ОрганизацияПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе);
	о.Параметры.ДатаСоставления = ТекущаяДатаСеанса();
	о.Параметры.ДатаНачала = Формат(ДатаНачала, "ДФ=dd.MM.yyyy");
	о.Параметры.ДатаКонца = Формат(ДатаОкончания, "ДФ=dd.MM.yyyy");
	о.Параметры.ОрганизацияПоОКПО = СведенияОПокупателе.КодПоОКПО;
	//о.Параметры.Номер = НомерОтчета;
	тд.Вывести(о);
	
	о = Макет.ПолучитьОбласть("Шапка");
	тд.Вывести(о);
	ПовторятьПриПечатиСтроки = тд.Область(1 + о.ВысотаТаблицы, ,2 + о.ВысотаТаблицы);
	
	о = Макет.ПолучитьОбласть("ОстатокНачала");
	о.Параметры.ДатаНачала = НСтр("ru = 'Остаток на'") + " " + Формат(ДатаНачала, "ДЛФ=Д");
	о.Параметры.НачСтоимостьВсего = гФмт(НачСтоимость);
	тд.Вывести(о);
	
	о = Макет.ПолучитьОбласть("Приход");
	тд.Вывести(о);
	
	о = Макет.ПолучитьОбласть("Строка");
	Для Каждого сд Из тДан Цикл
		
		Если сд.ПриходСтоимость = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		о.Параметры.Документ       = сд.Название;
		о.Параметры.Расшифровка    = сд.Документ;
		о.Параметры.ДатаДокумента  = сд.Дата;
		о.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(сд.Номер, Ложь, Истина);
		о.Параметры.СуммаТовара    = гФмт(сд.ПриходСтоимость);
		о.Параметры.СуммаТары      = гФмт(0);
		тд.Вывести(о);
	КонецЦикла;
	
	о = Макет.ПолучитьОбласть("ИтогоПриход");
	о.Параметры.ПрихСтоимостьВсего = гФмт(ПриходСтоимость);
	тд.Вывести(о);
	
	о = Макет.ПолучитьОбласть("ВсегоПриход");
	о.Параметры.ПриходСОстатком = гФмт(ПриходСтоимость + НачСтоимость);
	тд.Вывести(о);
	
	тд.ВывестиГоризонтальныйРазделительСтраниц();
	
	о = Макет.ПолучитьОбласть("Расход");
	тд.Вывести(о);
	
	ИтогоНаценка = 0;
	ИтогоСтоимостьПродажи = 0;
	
	о = Макет.ПолучитьОбласть("Строка");
	Для Каждого сд Из тДан Цикл
		
		Если сд.РасходСтоимость = 0 и сд.СтоимостьПродажи = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		о.Параметры.Документ       = сд.Название;
		о.Параметры.Расшифровка    = сд.Документ;
		о.Параметры.ДатаДокумента  = сд.Дата;
		о.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(сд.Номер, Ложь, Истина);
		о.Параметры.СуммаТовара    = гФмт(сд.РасходСтоимость);
		о.Параметры.СуммаТары      = гФмт(0);
		
		нац = сд.СтоимостьПродажи - сд.РасходСтоимость;
		ИтогоНаценка = ИтогоНаценка + нац;
		ИтогоСтоимостьПродажи = ИтогоСтоимостьПродажи + сд.СтоимостьПродажи;
		
		о.Параметры.СтоимостьПродажи = гФмт(сд.СтоимостьПродажи);
		о.Параметры.Наценка = гФмт(нац);
		
		тд.Вывести(о);
		
	КонецЦикла;
	
	о = Макет.ПолучитьОбласть("ИтогоРасход");
	о.Параметры.РасхСтоимостьВсего = гФмт(РасходСтоимость);
	о.Параметры.ИтогоНаценка = гФмт(ИтогоНаценка);
	о.Параметры.ИтогоСтоимостьПродажи = гФмт(ИтогоСтоимостьПродажи);
	тд.Вывести(о);
	
	о = Макет.ПолучитьОбласть("ОстатокКонец");
	о.Параметры.ДатаКонца = НСтр("ru = 'Остаток на'") + " "  + Формат(ДатаОкончания, "ДЛФ=Д");
	о.Параметры.КонСтоимостьВсего = гФмт(КонСтоимость);
	тд.Вывести(о);
	
	о = Макет.ПолучитьОбласть("Подвал");
	тд.Вывести(о);
	
	тд.ПовторятьПриПечатиСтроки = ПовторятьПриПечатиСтроки;
	
	возврат тд;
КонецФункции

&НаКлиенте
Процедура кмдСформировать(Команда)
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) или не ЗначениеЗаполнено(ДатаОкончания)
		или ДатаНачала > ДатаОкончания Тогда
		ПоказатьПредупреждение(, "Не указан период или указан не корректно");
		возврат;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Склад) Тогда
		ПоказатьПредупреждение(, "Не указан склад");
		возврат;
	КонецЕсли;
	
	ТабДокумент = Сформировать();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	уп = МойМдл.ЭтоУправляющий();
	
	Если НЕ уп Тогда
		Элементы.грПараметры.Доступность = Ложь;
		Отказ = не ЗначениеЗаполнено(Склад);
		Отказ = Отказ И НЕ ЗначениеЗаполнено(ЛБ_ВидТовара);
	КонецЕсли;
	
	ДатаНачала = НачалоДня(ТекущаяДата());
	ДатаОкончания = ДатаНачала;
КонецПроцедуры
