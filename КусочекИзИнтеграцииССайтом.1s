
Функция   ПараметрыСоединения() Экспорт
	возврат ВыполнитьЗаменыПараметров(
	"DRIVER={MySQL ODBC 8.0 Unicode Driver};"+
	"SERVER=$IpOfSite$;"+
	"DATABASE=$Database$;"+
	"UID=$Login$;"+
	"PWD=$Password$;"+
	"MULTI_STATEMENTS=1;"+
	"MULTI_RESULTS=1;"+
	"STMT=SET CHARACTER SET utf8");
КонецФункции

Функция   Соединение(конт)
	
	Если ТипЗнч(конт) = Тип("Структура") Тогда
		соед = Неопределено;
		Если конт.Свойство("Соединение", соед) Тогда
			Попытка
				Если ТипЗнч(соед) = Тип("COMОбъект") И соед.State() = 1 Тогда
					возврат соед;
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	// для просмотра драйверов ODBC использовать
	//  %windir%\SysWOW64\odbcad32.exe
	//  из командной строки, т.к.
	//  иначе из панели инструментов открывается
	//  не соответствующая архитектурой
	
	соед = новый COMОбъект("ADODB.Connection");
	соед.ConnectionString = ПараметрыСоединения();
	соед.ConnectionTimeout = 30;
	соед.CommandTimeout = 600;
	соед.Open();
	
	Если ТипЗнч(конт) = Тип("Структура") Тогда
		конт.Вставить("Соединение", соед);
	КонецЕсли;
	
	возврат соед;
КонецФункции

Функция   КонвертНазв(назв, ма_уже)
	
	перв = Истина;
	р = "";
	Для н = 1 по СтрДлина(назв) Цикл
		си = Сред(назв, н, 1);
		Если ВРег(си) = НРег(си) Тогда
			Если перв или СтрНайти("0123456789", си) = 0 Тогда
				си = "_";
			КонецЕсли;
		КонецЕсли;
		р = р + си;
		перв = Ложь;
	КонецЦикла;
	
	Если р = "" Тогда
		р = "_";
	КонецЕсли;
	
	резПопытка = "";
	Для н = 1 по 1000 Цикл
		
		резПопытка = р;
		Если н > 1 Тогда
			резПопытка = р + фмтбг(н);
		КонецЕсли;
		
		Если ма_уже.Найти(резПопытка) = Неопределено Тогда
			прервать;
		КонецЕсли;
	КонецЦикла;
	
	ма_уже.Добавить(резПопытка);
	возврат резПопытка;
КонецФункции

Функция   ПолучитьТаблицуИзЗапроса(конт, запр) Экспорт
	
	соед = Соединение(конт);
	выб = соед.Execute(запр);
	Если выб.State <> 1 Тогда
		возврат Неопределено;
	КонецЕсли;
	
	количКолонок = выб.Fields.Count;
	маНазвУжеИспользованы = новый Массив;
	
	тРез = новый ТаблицаЗначений;
	Для нКл = 0 по количКолонок-1 Цикл
		назв = выб.Fields(нКл).Name;
		тРез.Колонки.Добавить(КонвертНазв(назв, маНазвУжеИспользованы));
	КонецЦикла;
	
	Если НЕ выб.EOF() или НЕ выб.BOF() Тогда
		выб.MoveFirst();
		Пока НЕ выб.EOF() Цикл
			ст = тРез.Добавить();
			Для нКл = 0 по количКолонок-1 Цикл
				ст.Установить(нКл, выб.Fields(нКл).Value);
			КонецЦикла;
			
			выб.MoveNext();
		КонецЦикла;
	КонецЕсли;
	
	выб.Close();
	возврат тРез;
КонецФункции

Функция   ПолучитьЗначение(конт, запр) Экспорт
	возврат ПолучитьТаблицуИзЗапроса(конт, запр).Получить(0).Получить(0);
КонецФункции

Функция   ПолучитьЗаписьПоИд(конт, таб, ид)
	тхт = "
	|select
	|	*
	|from
	|  %таблица%
	|where
	|  id = %ид%";
	
	тхт = СтрЗаменить(тхт, "%таблица%", таб);
	тхт = СтрЗаменить(тхт, "%ид%", фмтбг(ид));
	
	т = ПолучитьТаблицуИзЗапроса(конт, тхт);
	возврат ТабСтру(т);
КонецФункции

Функция   ПолучитьПоследнийИдентификатор(конт)
	возврат ПолучитьЗначение(конт, "select last_insert_id()");
КонецФункции
